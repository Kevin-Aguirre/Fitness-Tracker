{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Projects/fitness-tracker/client/src/components/pages/SetGoal.js\",\n  _s = $RefreshSig$();\nimport React, { version } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleXmark, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultForm = {\n  timeFrame: \"\",\n  startDate: \"\",\n  endDate: \"\",\n  goalType: \"\",\n  goal: {\n    pred: \"\",\n    exercise: \"\",\n    value: \"\"\n  }\n};\nfunction convertDate(aDate) {\n  const dates = {\n    \"01\": \"January\",\n    \"02\": \"February\",\n    \"03\": \"March\",\n    \"04\": \"April\",\n    \"05\": \"May\",\n    \"06\": \"June\",\n    \"07\": \"July\",\n    \"08\": \"August\",\n    \"09\": \"September\",\n    \"10\": \"October\",\n    \"11\": \"November\",\n    \"12\": \"December\"\n  };\n  let aDateArr = aDate.split(\"-\");\n  return `${dates[aDateArr[1]]} ${aDateArr[2]}, ${aDateArr[0]}`;\n}\nfunction convertTimeFrame(timeFrame) {\n  switch (timeFrame) {\n    case \"daily\":\n      return \"For every day\";\n    case \"weekly\":\n      return \"For every week\";\n    case \"monthly\":\n      return \"For every month\";\n    case \"yearly\":\n      return \"For every year\";\n    case \"anytime\":\n      return \"At any point\";\n  }\n}\nfunction convertPred(goalPred, goalVal) {\n  // console.log(\"pred:\", goalPred)\n  switch (goalPred) {\n    case \"general-sessions-total\":\n      return `workout ${goalVal} times.`;\n    case \"general-mins-total\":\n      return \"[INCOMPLETE]\";\n  }\n}\nexport default function SetGoalPage(props) {\n  _s();\n  const [validationErrors, setValidationErrors] = React.useState({});\n  const [formData, setFormData] = React.useState(defaultForm);\n  const [touched, setTouched] = React.useState({\n    timeFrame: false,\n    startDate: false,\n    endDate: false,\n    goalType: false,\n    pred: false,\n    value: false,\n    submit: false\n  });\n  console.log(\"errs \", validationErrors);\n  // helper functions\n\n  function isDateBefore(firstDateStr, secondDateStr) {\n    const firstDate = new Date(firstDateStr);\n    const secondDate = new Date(secondDateStr);\n    return firstDate < secondDate;\n  }\n  function isWithinTimeframe(startDateStr, endDateStr, timeframe) {\n    const startDate = new Date(startDateStr);\n    startDate.setHours(0, 0, 0, 0); // Set to start of the day\n    const endDate = new Date(endDateStr);\n    endDate.setHours(0, 0, 0, 0); // Set to start of the day\n\n    const timeDiff = endDate - startDate; // Difference in milliseconds\n\n    const oneDay = 24 * 60 * 60 * 1000; // Milliseconds in one day\n    const oneWeek = 7 * oneDay;\n    const oneMonth = 30 * oneDay; // Approximation of a month\n    const oneYear = 365 * oneDay; // Approximation of a year\n\n    switch (timeframe) {\n      case 'daily':\n        return timeDiff >= oneDay;\n      case 'weekly':\n        return timeDiff >= oneWeek;\n      case 'monthly':\n        return timeDiff >= oneMonth;\n      case 'yearly':\n        return timeDiff >= oneYear;\n      case 'anytime':\n        return true;\n      // 'anytime' always fits\n      default:\n        return false;\n      // Invalid timeframe\n    }\n  }\n\n  // form functions\n\n  function handleDateTimeGoalChange(event) {\n    const {\n      id,\n      value\n    } = event.target;\n    let updatedValue = value;\n\n    // Handling date format for startDate and endDate\n    if (id === \"startDate\" || id === \"endDate\") {\n      let year = updatedValue.split('-')[0];\n      if (year.length > 4) {\n        year = year.substring(0, 4);\n        updatedValue = year + '-' + updatedValue.split('-').slice(1).join('-');\n      }\n    }\n\n    // Validation logic\n    let errors = {\n      ...validationErrors\n    };\n    if (id === \"timeFrame\") {\n      if (!formData.startDate || !formData.endDate) {\n        errors[\"date\"] = \"Start and end date must be included.\";\n      } else if (!isDateBefore(formData.startDate, formData.endDate)) {\n        errors[\"date\"] = \"Start date must be before end date.\";\n      } else if (!isWithinTimeframe(formData.startDate, formData.endDate, updatedValue)) {\n        errors[\"date\"] = \"Start and end dates do not fit within timeframe.\";\n      } else {\n        delete errors[\"date\"];\n      }\n      if (!formData.goalType) {\n        errors.goalType = \"You must select a goal type.\";\n      } else {\n        delete errors.goalType;\n      }\n      // if (!isWithinTimeframe(formData.startDate, formData.endDate, updatedValue)) {\n\n      // }\n      // errors[\"date\"] = \"u updated timeFrame\"\n    } else if (id === \"startDate\") {\n      if (!formData.endDate) {\n        errors[\"date\"] = \"Start and end date must be included.\";\n      } else if (!isDateBefore(updatedValue, formData.endDate)) {\n        errors[\"date\"] = \"Start date must be before end date.\";\n      } else if (!formData.timeFrame) {\n        errors[\"date\"] = \"Timeframe must be included.\";\n      } else if (!isWithinTimeframe(updatedValue, formData.endDate, formData.timeFrame)) {\n        errors[\"date\"] = \"Start and end dates do not fit within time frame.\";\n      } else {\n        delete errors[\"date\"];\n      }\n      if (!formData.goalType) {\n        errors.goalType = \"You must select a goal type.\";\n      } else {\n        delete errors.goalType;\n      }\n      // logic here to checl i feverything else makes sense\n    } else if (id === \"endDate\") {\n      if (!formData.startDate) {\n        errors[\"date\"] = \"Start and end date must be included.\";\n      } else if (!isDateBefore(formData.startDate, updatedValue)) {\n        errors[\"date\"] = \"Start date must be before end date.\";\n      } else if (!formData.timeFrame) {\n        errors[\"date\"] = \"Timeframe must be included.\";\n      } else if (!isWithinTimeframe(formData.startDate, updatedValue, formData.timeFrame)) {\n        errors[\"date\"] = \"Start and end dates do not fit within timeframe.\";\n      } else {\n        delete errors[\"date\"];\n      }\n      if (!formData.goalType) {\n        errors.goalType = \"You must select a goal type.\";\n      } else {\n        delete errors.goalType;\n      }\n    } else {\n      if (id === \"goalType\" && updatedValue) {\n        delete errors[\"goalType\"];\n      } else {\n        errors[\"goalType\"] = \"You must select a goal type.\";\n      }\n      if (!formData.timeFrame) {\n        errors[\"date\"] = \"timeframe must be included\";\n      } else if (!formData.startDate) {\n        errors[\"date\"] = \"start and end date must be incldued\";\n      } else if (!isDateBefore(formData.startDate, formData.endDate)) {\n        errors[\"date\"] = \"start date must be before end date \";\n      } else if (!isWithinTimeframe(formData.startDate, formData.endDate, formData.timeFrame)) {\n        errors[\"date\"] = \"start and end dates do not fit within timeframe\";\n      } else {\n        delete errors[\"date\"];\n      }\n      errors[\"pred\"] = \"You must select a goal.\";\n      errors[\"value\"] = \"You must enter a value for your goal.\";\n    }\n\n    // console.log(\"id: \", id)\n    // console.log(\"val: \", updatedValue)\n    // console.log(\"touched: \", touched)\n    // console.log(\"goal type\", formData.goalType)\n    // console.log(errors)\n    setValidationErrors(errors);\n\n    // Update formData\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [id]: updatedValue\n    }));\n\n    // Mark as touched\n    setTouched(prevTouched => ({\n      ...prevTouched,\n      [id]: true,\n      goal: false\n    }));\n  }\n  function handleGoalPredChange(event) {\n    const val = event.target.value;\n    // console.log(\"val\", val)\n\n    let errors = {\n      ...validationErrors\n    };\n    if (errors[\"pred\"]) {\n      delete errors[\"pred\"];\n    }\n    setValidationErrors(errors);\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      goal: {\n        ...prevFormData.goal,\n        pred: val\n      }\n    }));\n  }\n  function handleGoalValueChange(event) {\n    const value = event.target.value;\n    const isDigitOnly = /^[0-9]*$/;\n    let errors = {\n      ...validationErrors\n    };\n    if (isDigitOnly.test(value) && value.length <= 4) {\n      // console.log(\"passed\")\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        goal: {\n          ...prevFormData.goal,\n          value: value\n        }\n      }));\n      if (value === \"0\") {\n        errors[\"value\"] = \"Your goal value cannot be 0.\";\n      } else if (value === \"\") {\n        errors[\"value\"] = \"You must enter a value for your goal.\";\n      } else {\n        delete errors[\"value\"];\n      }\n    }\n    setValidationErrors(errors);\n  }\n\n  //     const [validationErrors, setValidationErrors] = React.useState({})\n  function handleSubmit(event) {\n    event.preventDefault();\n    let errors = {};\n    console.log(\"submitted\");\n    if (formData.timeFrame === \"\") {\n      errors[\"date\"] = \"You must choose a timeframe.\";\n    } else if (!formData.startDate || !formData.endDate) {\n      errors[\"date\"] = \"Start and end Dates must be included.\";\n    } else if (!isDateBefore(formData.startDate, formData.endDate)) {\n      errors[\"date\"] = \"Start date must be before end date.\";\n    } else if (!isWithinTimeframe(formData.startDate, formData.endDate, formData.timeFrame)) {\n      errors[\"date\"] = \"Start and end dates do not fit within timeframe.\";\n    } else {\n      delete errors[\"date\"];\n    }\n    if (formData.goalType === \"\") {\n      errors[\"goalType\"] = \"You must select a goal type.\";\n    } else {\n      delete errors[\"goalType\"];\n    }\n    if (formData.goal.pred === \"\") {\n      errors[\"pred\"] = \"You must select a goal.\";\n    } else {\n      delete errors[\"pred\"];\n    }\n    if (formData.goal.value === \"\") {\n      errors[\"value\"] = \"You must enter a value for your goal.\";\n    } else if (formData.goal.value === \"0\") {\n      errors[\"value\"] = \"Your goal value cannot be 0.\";\n    } else {\n      delete errors[\"value\"];\n    }\n    setTouched(prevTouched => ({\n      ...prevTouched,\n      goal: true\n    }));\n    if (Object.keys(errors).length === 0) {\n      props.addGoal(formData);\n      setFormData(defaultForm);\n      setValidationErrors({});\n    } else {\n      // console.log(errors)\n      setValidationErrors(errors);\n    }\n  }\n  function resetForm() {\n    console.log(\"clicked\");\n    setFormData(defaultForm);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"parent\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"goal-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"goal-form-heading\",\n        children: \"Set Some Goals!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-parent\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"selection-label\",\n            htmlFor: \"timeFrame\",\n            children: \"Please Select a Time Frame: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"selection-dropdown\",\n            id: \"timeFrame\",\n            value: formData.timeFrame,\n            onChange: handleDateTimeGoalChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a Time Frame\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"daily\",\n              children: \"Daily\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"weekly\",\n              children: \"Weekly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"monthly\",\n              children: \"Monthly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              className: \"yearly\",\n              children: \"Yearly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"anytime\",\n              children: \"Anytime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this), touched.timeFrame && validationErrors.timeFrame && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"validation-error\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"x-icon\",\n            icon: faCircleXmark\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 29\n          }, this), validationErrors.timeFrame]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-parent\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"selection-label\",\n            htmlFor: \"startDate\",\n            children: \"Start Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"selection-dropdown\",\n            type: \"date\",\n            id: \"startDate\",\n            value: formData.startDate,\n            onChange: handleDateTimeGoalChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-parent\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"selection-label\",\n            htmlFor: \"endDate\",\n            children: \"End Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"selection-dropdown\",\n            type: \"date\",\n            id: \"endDate\",\n            value: formData.endDate,\n            onChange: handleDateTimeGoalChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 21\n        }, this), (touched.startDate || touched.endDate || touched.timeFrame || touched.goalType || touched.goal) && validationErrors.date && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"validation-error\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"x-icon\",\n            icon: faCircleXmark\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 29\n          }, this), validationErrors.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-parent\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"selection-label\",\n            htmlFor: \"goal-type-input\",\n            children: \"Goal Type: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"selection-dropdown\",\n            id: \"goalType\",\n            value: formData.goalType,\n            onChange: handleDateTimeGoalChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select A Goal Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"general\",\n              children: \"General\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }, this), (touched.startDate || touched.endDate || touched.timeFrame || touched.goalType || touched.goal) && validationErrors[\"goalType\"] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"validation-error\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"x-icon\",\n            icon: faCircleXmark\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 33\n          }, this), validationErrors[\"goalType\"]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 29\n        }, this), formData.goalType === \"general\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-parent-parent\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-parent\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"selection-label\",\n              htmlFor: \"pred\",\n              children: \"Select A Goal:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"selection-dropdown\",\n              id: \"pred\",\n              value: formData.goal.pred,\n              onChange: handleGoalPredChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Selected Goal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"general-sessions-total\",\n                children: \"Workout _ Times in Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"general-mins-total\",\n                children: \"Workout For _ Minutes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 29\n          }, this), validationErrors[\"pred\"] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"validation-error\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: \"x-icon\",\n              icon: faCircleXmark\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 37\n            }, this), validationErrors[\"pred\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-parent\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"selection-label\",\n              htmlFor: \"goal-selection-val\",\n              children: \"Select A Value for Your Goal: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"selection-dropdown\",\n              id: \"goal-selection-val\",\n              placeholder: \"0\",\n              value: formData.goal.value,\n              onChange: handleGoalValueChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 29\n          }, this), validationErrors[\"value\"] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"validation-error\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: \"x-icon\",\n              icon: faCircleXmark\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 37\n            }, this), validationErrors[\"value\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"goal-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Goal Preview:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 25\n          }, this), Object.keys(validationErrors).length > 0 || JSON.stringify(formData) === JSON.stringify(defaultForm) ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Please finish the form first.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [convertTimeFrame(formData.timeFrame), \", between \", convertDate(formData.startDate), \" and \", convertDate(formData.endDate), \", I will \", convertPred(formData.goal.pred, formData.goal.value)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit--button\",\n        children: \"Add Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit--button\",\n        type: \"button\",\n        onClick: resetForm,\n        children: \"Clear Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 351,\n    columnNumber: 9\n  }, this);\n}\n\n/*\ngoaltracker /\n\n\n\npotential goals:\n  timed (daily, weekly, monthly, anytime):\n    - progression specific\n      - weight: increase total weight lifted (reps x set) for one exercise or in total for period\n      - time: extend hold by certain amount of time \n      - rep: try to complete n repetitions in a set or workout or in total for period\n      - distance: try to move n miles for exercise or in period\n    - general:\n      - workout n times\n      - workout for n minutes\n  -streak system (day #234 of working out)\n\n  homepage / \n  Welcome Back!\n\n  How Many Days In A Row You've Worked Out for: \n    n\n\n  How Many Weeks In A Row You've Worked Out for:\n\n\n2 can for chris \n1.5 for other cats\n\n\n*/\n_s(SetGoalPage, \"joEejFHDqkbDzf5rhzMSPM7kRBo=\");\n_c = SetGoalPage;\nvar _c;\n$RefreshReg$(_c, \"SetGoalPage\");","map":{"version":3,"names":["React","version","FontAwesomeIcon","faCircleXmark","faPlus","faMinus","jsxDEV","_jsxDEV","defaultForm","timeFrame","startDate","endDate","goalType","goal","pred","exercise","value","convertDate","aDate","dates","aDateArr","split","convertTimeFrame","convertPred","goalPred","goalVal","SetGoalPage","props","_s","validationErrors","setValidationErrors","useState","formData","setFormData","touched","setTouched","submit","console","log","isDateBefore","firstDateStr","secondDateStr","firstDate","Date","secondDate","isWithinTimeframe","startDateStr","endDateStr","timeframe","setHours","timeDiff","oneDay","oneWeek","oneMonth","oneYear","handleDateTimeGoalChange","event","id","target","updatedValue","year","length","substring","slice","join","errors","prevFormData","prevTouched","handleGoalPredChange","val","handleGoalValueChange","isDigitOnly","test","handleSubmit","preventDefault","Object","keys","addGoal","resetForm","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","disabled","icon","type","date","placeholder","JSON","stringify","onClick","_c","$RefreshReg$"],"sources":["/home/kevin/Projects/fitness-tracker/client/src/components/pages/SetGoal.js"],"sourcesContent":["import React, { version } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCircleXmark, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\n\nconst defaultForm = {\n    timeFrame: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    goalType: \"\",\n    goal: {\n        pred: \"\",\n        exercise: \"\",\n        value: \"\"\n    }\n}\n\nfunction convertDate(aDate) {\n    const dates = {\n        \"01\": \"January\",\n        \"02\": \"February\",\n        \"03\": \"March\",\n        \"04\": \"April\",\n        \"05\": \"May\",\n        \"06\": \"June\",\n        \"07\": \"July\",\n        \"08\": \"August\",\n        \"09\": \"September\",\n        \"10\": \"October\",\n        \"11\": \"November\",\n        \"12\": \"December\"\n    };\n\n    let aDateArr = aDate.split(\"-\")\n    return `${dates[aDateArr[1]]} ${aDateArr[2]}, ${aDateArr[0]}`\n}\n\nfunction convertTimeFrame(timeFrame) {\n    switch(timeFrame) {\n        case \"daily\":\n            return \"For every day\"\n        case \"weekly\":\n            return \"For every week\"\n        case \"monthly\":\n            return \"For every month\"\n        case \"yearly\":\n            return \"For every year\"\n        case \"anytime\":\n            return \"At any point\"\n    }\n}\n\nfunction convertPred(goalPred, goalVal) {\n    // console.log(\"pred:\", goalPred)\n    switch(goalPred) {\n        case \"general-sessions-total\":\n            return `workout ${goalVal} times.`\n        case \"general-mins-total\":\n            return \"[INCOMPLETE]\"\n    }\n}\n\nexport default function SetGoalPage (props) {\n\n    \n    const [validationErrors, setValidationErrors] = React.useState({})\n    const [formData, setFormData] = React.useState(defaultForm)\n    const [touched, setTouched] = React.useState({\n        timeFrame: false,\n        startDate: false,\n        endDate: false,\n        goalType: false,\n        pred: false,\n        value: false,\n        submit: false\n    });\n\n\n\n    console.log(\"errs \", validationErrors)\n    // helper functions\n\n    function isDateBefore(firstDateStr, secondDateStr) {\n        const firstDate = new Date(firstDateStr);\n        const secondDate = new Date(secondDateStr);\n    \n        return firstDate < secondDate;\n    }\n\n    function isWithinTimeframe(startDateStr, endDateStr, timeframe) {\n\n        const startDate = new Date(startDateStr);\n        startDate.setHours(0, 0, 0, 0); // Set to start of the day\n        const endDate = new Date(endDateStr);\n        endDate.setHours(0, 0, 0, 0); // Set to start of the day\n\n\n        const timeDiff = endDate - startDate; // Difference in milliseconds\n\n        const oneDay = 24 * 60 * 60 * 1000; // Milliseconds in one day\n        const oneWeek = 7 * oneDay;\n        const oneMonth = 30 * oneDay; // Approximation of a month\n        const oneYear = 365 * oneDay; // Approximation of a year\n    \n        switch (timeframe) {\n            case 'daily':\n                return timeDiff >= oneDay;\n            case 'weekly':\n                return timeDiff >= oneWeek;\n            case 'monthly':\n                return timeDiff >= oneMonth;\n            case 'yearly':\n                return timeDiff >= oneYear;\n            case 'anytime':\n                return true; // 'anytime' always fits\n            default:\n                return false; // Invalid timeframe\n        }\n    }\n\n    // form functions\n\n    function handleDateTimeGoalChange(event) {\n        const { id, value } = event.target;\n        let updatedValue = value;\n        \n        \n        // Handling date format for startDate and endDate\n        if (id === \"startDate\" || id === \"endDate\") {\n            let year = updatedValue.split('-')[0];\n            if (year.length > 4) {\n                year = year.substring(0, 4);\n                updatedValue = year + '-' + updatedValue.split('-').slice(1).join('-');\n            }\n        }\n        \n        // Validation logic\n        let errors = { ...validationErrors };\n        if (id === \"timeFrame\") {\n            if (!formData.startDate || !formData.endDate) {\n                errors[\"date\"] = \"Start and end date must be included.\"\n            } else if (!isDateBefore(formData.startDate, formData.endDate)) {\n                errors[\"date\"] = \"Start date must be before end date.\"\n            } else if (!isWithinTimeframe(formData.startDate, formData.endDate, updatedValue)) {\n                errors[\"date\"] = \"Start and end dates do not fit within timeframe.\"\n            } else {\n                delete errors[\"date\"]\n            }\n\n            if (!formData.goalType) {\n                errors.goalType = \"You must select a goal type.\"\n            } else {\n                delete errors.goalType\n            }\n            // if (!isWithinTimeframe(formData.startDate, formData.endDate, updatedValue)) {\n                \n                // }\n                // errors[\"date\"] = \"u updated timeFrame\"\n                \n        } else if (id === \"startDate\") {\n            if (!formData.endDate) {\n                errors[\"date\"] = \"Start and end date must be included.\"\n            } else if (!isDateBefore(updatedValue, formData.endDate)) {\n                errors[\"date\"] = \"Start date must be before end date.\"\n            } else if (!formData.timeFrame) {\n                errors[\"date\"] = \"Timeframe must be included.\"\n            } else if (!isWithinTimeframe(updatedValue, formData.endDate, formData.timeFrame)) {\n                errors[\"date\"] = \"Start and end dates do not fit within time frame.\"\n            } else {\n                delete errors[\"date\"]\n            }\n\n            if (!formData.goalType) {\n                errors.goalType = \"You must select a goal type.\"\n            } else {\n                delete errors.goalType\n            }\n        // logic here to checl i feverything else makes sense\n        } else if (id === \"endDate\") {\n            if (!formData.startDate) {\n                errors[\"date\"] = \"Start and end date must be included.\"\n            } else if (!isDateBefore(formData.startDate, updatedValue)) {\n                errors[\"date\"] = \"Start date must be before end date.\"\n            } else if (!formData.timeFrame) {\n                errors[\"date\"] = \"Timeframe must be included.\"\n            } else if (!isWithinTimeframe(formData.startDate, updatedValue, formData.timeFrame)) {\n                errors[\"date\"] = \"Start and end dates do not fit within timeframe.\"\n            } else {\n                delete errors[\"date\"]\n            }\n\n            if (!formData.goalType) {\n                errors.goalType = \"You must select a goal type.\"\n            } else {\n                delete errors.goalType\n            }\n        } else {\n            if (id === \"goalType\" && updatedValue) {\n                delete errors[\"goalType\"]\n            } else {\n                errors[\"goalType\"] = \"You must select a goal type.\"\n            }\n\n            if (!formData.timeFrame) {\n                errors[\"date\"] = \"timeframe must be included\"\n            } else if (!formData.startDate) {\n                errors[\"date\"] = \"start and end date must be incldued\"\n            } else if (!isDateBefore(formData.startDate, formData.endDate)) {\n                errors[\"date\"] = \"start date must be before end date \"\n            } else if (!isWithinTimeframe(formData.startDate, formData.endDate, formData.timeFrame)) {\n                errors[\"date\"] = \"start and end dates do not fit within timeframe\"\n            } else {\n                delete errors[\"date\"]\n            }            \n\n            errors[\"pred\"] = \"You must select a goal.\"\n            errors[\"value\"] = \"You must enter a value for your goal.\"\n        }\n\n        // console.log(\"id: \", id)\n        // console.log(\"val: \", updatedValue)\n        // console.log(\"touched: \", touched)\n        // console.log(\"goal type\", formData.goalType)\n        // console.log(errors)\n        setValidationErrors(errors);\n        \n        // Update formData\n        setFormData(prevFormData => ({\n            ...prevFormData,\n            [id]: updatedValue\n        }));\n    \n        // Mark as touched\n        setTouched(prevTouched => ({\n            ...prevTouched,\n            [id]: true,\n            goal: false\n        }));\n    \n    }\n    \n\n    function handleGoalPredChange(event) {\n        const val = event.target.value\n        // console.log(\"val\", val)\n\n        let errors = {...validationErrors}\n        if (errors[\"pred\"]) {\n            delete errors[\"pred\"]\n        }\n        setValidationErrors(errors)\n\n\n        setFormData(prevFormData => ({\n            ...prevFormData,\n            goal: {\n                ...prevFormData.goal,\n                pred: val\n            }\n        }))\n\n    }\n\n    function handleGoalValueChange(event) {\n        const value = event.target.value;\n        const isDigitOnly = /^[0-9]*$/;\n        let errors = {...validationErrors}\n        if (isDigitOnly.test(value) && value.length <= 4) {\n            // console.log(\"passed\")\n            setFormData(prevFormData => ({\n                ...prevFormData,\n                goal: {\n                    ...prevFormData.goal,\n                    value: value\n                }\n            }))\n            \n            if (value === \"0\") {\n                errors[\"value\"] = \"Your goal value cannot be 0.\"\n            } else if (value === \"\") {\n                errors[\"value\"] = \"You must enter a value for your goal.\"\n            } else {\n                delete errors[\"value\"]\n            }\n\n        } \n        setValidationErrors(errors)\n    }\n\n    //     const [validationErrors, setValidationErrors] = React.useState({})\n    function handleSubmit(event) {\n        event.preventDefault()\n\n        let errors = {}\n        console.log(\"submitted\")\n\n        if (formData.timeFrame === \"\") {\n            errors[\"date\"] = \"You must choose a timeframe.\"\n        } else if (!formData.startDate || !formData.endDate) {\n            errors[\"date\"] = \"Start and end Dates must be included.\"\n        } else if (!isDateBefore(formData.startDate, formData.endDate)) {\n            errors[\"date\"] = \"Start date must be before end date.\"\n        } else if (!isWithinTimeframe(formData.startDate, formData.endDate, formData.timeFrame)) {\n            errors[\"date\"] = \"Start and end dates do not fit within timeframe.\"\n        } else {\n            delete errors[\"date\"]\n        }\n\n        if (formData.goalType === \"\") {\n            errors[\"goalType\"] = \"You must select a goal type.\"\n        } else {\n            delete errors[\"goalType\"]\n        }\n\n        if (formData.goal.pred === \"\") {\n            errors[\"pred\"] = \"You must select a goal.\"\n        } else {\n            delete errors[\"pred\"]\n        }\n\n        if (formData.goal.value === \"\") {\n            errors[\"value\"] = \"You must enter a value for your goal.\"\n        } else if (formData.goal.value === \"0\") {\n            errors[\"value\"] = \"Your goal value cannot be 0.\"\n        } else {\n            delete errors[\"value\"]\n        }\n\n        setTouched((prevTouched) => ({\n            ...prevTouched,\n            goal: true\n        }))\n\n\n        if (Object.keys(errors).length === 0) {\n            props.addGoal(formData)\n            \n            setFormData(defaultForm)\n            setValidationErrors({})\n        } else {\n            // console.log(errors)\n            setValidationErrors(errors)\n        }\n    }\n\n    function resetForm() {\n        console.log(\"clicked\")\n        setFormData(defaultForm)\n    }\n\n    return (\n        <div className=\"parent\">\n            {/* set goal form */}\n            <form className=\"goal-form\" onSubmit={handleSubmit}>\n                <h1 className=\"goal-form-heading\">Set Some Goals!</h1>\n                <div className=\"form-inputs\">\n                    <div className=\"field-parent\">\n                        <label className=\"selection-label\" htmlFor=\"timeFrame\">Please Select a Time Frame: </label>\n                        <select\n                            className=\"selection-dropdown\"\n                            id=\"timeFrame\"\n                            value={formData.timeFrame}\n                            onChange={handleDateTimeGoalChange}\n                        >\n                            <option value=\"\" disabled>Select a Time Frame</option>\n                            <option value=\"daily\">Daily</option>\n                            <option value=\"weekly\">Weekly</option>\n                            <option value=\"monthly\">Monthly</option>\n                            <option className=\"yearly\">Yearly</option>\n                            <option value=\"anytime\">Anytime</option>    \n                        </select>\n                    </div>\n                    {\n                        touched.timeFrame && validationErrors.timeFrame \n                        && \n                        <div className=\"validation-error\">\n                            <FontAwesomeIcon className=\"x-icon\" icon={faCircleXmark}></FontAwesomeIcon>\n                            {validationErrors.timeFrame}\n                        </div>}\n                    <div className=\"field-parent\">\n                        <label className=\"selection-label\" htmlFor=\"startDate\">Start Date:</label>\n                        <input\n                            className=\"selection-dropdown\"\n                            type=\"date\"\n                            id=\"startDate\"\n                            value={formData.startDate}\n                            onChange={handleDateTimeGoalChange}\n                            />\n                    </div>\n                    <div className=\"field-parent\">\n                        <label className=\"selection-label\" htmlFor=\"endDate\">End Date:</label>\n                        <input\n                            className=\"selection-dropdown\"\n                            type=\"date\"\n                            id=\"endDate\"\n                            value={formData.endDate}\n                            onChange={handleDateTimeGoalChange}\n                            />\n                    </div>\n                    {\n                        (touched.startDate || touched.endDate || touched.timeFrame || touched.goalType || touched.goal) && \n                        validationErrors.date && \n                        <div className=\"validation-error\">\n                            <FontAwesomeIcon className=\"x-icon\" icon={faCircleXmark}></FontAwesomeIcon>\n                            {validationErrors.date}\n                        </div>}\n                    {/* {validationErrors[\"date\"] && <div className=\"validation-error\">{validationErrors.date}</div>} */}\n                    <div className=\"field-parent\">\n                        <label className=\"selection-label\" htmlFor=\"goal-type-input\">Goal Type: </label>\n                        <select\n                            className=\"selection-dropdown\"\n                            id=\"goalType\"\n                            value={formData.goalType}\n                            onChange={handleDateTimeGoalChange}\n                        >\n                            <option value=\"\" disabled>Select A Goal Type</option>\n                            <option value=\"general\">General</option>\n                            {/* <option value=\"progression\">Progression</option> */}\n                        </select>\n                    </div>\n                        {\n                            (touched.startDate || touched.endDate || touched.timeFrame || touched.goalType || touched.goal) && \n                            validationErrors[\"goalType\"] && \n                            <div className=\"validation-error\">\n                                <FontAwesomeIcon className=\"x-icon\" icon={faCircleXmark}></FontAwesomeIcon>\n                                {validationErrors[\"goalType\"]}\n                            </div>\n                        }\n                    {\n                        formData.goalType === \"general\" &&   \n                        <div className=\"field-parent-parent\">\n                            <div className=\"field-parent\">\n                                <label className=\"selection-label\" htmlFor=\"pred\">Select A Goal:</label>\n                                <select\n                                    className=\"selection-dropdown\"\n                                    id=\"pred\"\n                                    value={formData.goal.pred}\n                                    onChange={handleGoalPredChange}\n                                >\n                                    <option value=\"\" disabled>Selected Goal</option>\n                                    <option value=\"general-sessions-total\">Workout _ Times in Total</option>\n                                    <option value=\"general-mins-total\">Workout For _ Minutes</option>\n                                </select>   \n                            </div>\n                            {\n                                validationErrors[\"pred\"] && \n                                <div className=\"validation-error\">\n                                    <FontAwesomeIcon className=\"x-icon\" icon={faCircleXmark}></FontAwesomeIcon>\n                                    {validationErrors[\"pred\"]}\n                                </div>\n                            }\n                            <div className=\"field-parent\"> \n                                <label className=\"selection-label\" htmlFor=\"goal-selection-val\">Select A Value for Your Goal: </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"selection-dropdown\"\n                                    id=\"goal-selection-val\"\n                                    placeholder=\"0\"\n                                    value={formData.goal.value}\n                                    onChange={handleGoalValueChange}\n                                />\n\n                            </div>               \n                            {\n                                validationErrors[\"value\"] && \n                                <div className=\"validation-error\">\n                                    <FontAwesomeIcon className=\"x-icon\" icon={faCircleXmark}></FontAwesomeIcon> \n                                    {validationErrors[\"value\"]}\n                                </div>\n                            }         \n                        </div>\n\n                    }\n                    <div className=\"goal-preview\">\n                        <h1>\n                            Goal Preview:\n                        </h1>   \n                        {\n                            Object.keys(validationErrors).length > 0 || JSON.stringify(formData) === JSON.stringify(defaultForm) \n                            ?   \n                            <div>Please finish the form first.</div>\n                            :\n                            <div>   \n                                {convertTimeFrame(formData.timeFrame)}, between {convertDate(formData.startDate)} and {convertDate(formData.endDate)}, I will {convertPred(formData.goal.pred, formData.goal.value)}\n                            </div>\n                        }\n                    </div>\n                </div>\n                <button className=\"submit--button\">Add Goal</button>\n                <button className=\"submit--button\" type=\"button\" onClick={resetForm}>Clear Form</button>\n            </form>\n        </div>\n    )\n}\n\n\n\n/*\ngoaltracker /\n\n\n\npotential goals:\n  timed (daily, weekly, monthly, anytime):\n    - progression specific\n      - weight: increase total weight lifted (reps x set) for one exercise or in total for period\n      - time: extend hold by certain amount of time \n      - rep: try to complete n repetitions in a set or workout or in total for period\n      - distance: try to move n miles for exercise or in period\n    - general:\n      - workout n times\n      - workout for n minutes\n  -streak system (day #234 of working out)\n\n  homepage / \n  Welcome Back!\n\n  How Many Days In A Row You've Worked Out for: \n    n\n\n  How Many Weeks In A Row You've Worked Out for:\n\n\n2 can for chris \n1.5 for other cats\n\n\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
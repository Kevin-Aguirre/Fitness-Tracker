{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Projects/fitness-tracker/client/src/components/pages/HomePage.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function (props) {\n  console.log(props);\n  function findRecentConsecutiveEntries(datesObject) {\n    // Convert object keys to date array and sort in descending order\n    if (Object.keys(datesObject).length === 0) {\n      return 0;\n    }\n    const sortedDates = Object.keys(datesObject).sort((a, b) => new Date(b) - new Date(a));\n    let currentStreak = 1;\n    let mostRecentDate = new Date(sortedDates[0]);\n    for (let i = 1; i < sortedDates.length; i++) {\n      const currentDate = new Date(sortedDates[i]);\n      const expectedDate = new Date(mostRecentDate);\n      expectedDate.setDate(expectedDate.getDate() - currentStreak);\n      if (currentDate.getTime() === expectedDate.getTime()) {\n        currentStreak++;\n      } else {\n        break; // Streak is broken\n      }\n    }\n    return currentStreak;\n  }\n  function findConsecutiveWeeklyEntries(datesObject) {\n    // Helper function to get the start of the week (Monday) for a given date\n    function getStartOfWeek(date) {\n      const startOfWeek = new Date(date);\n      startOfWeek.setHours(0, 0, 0, 0); // normalize time to start of the day\n      const dayOfWeek = startOfWeek.getDay();\n      const diff = startOfWeek.getDate() - dayOfWeek + (dayOfWeek === 0 ? -6 : 1); // adjust when day is Sunday\n      startOfWeek.setDate(diff);\n      return startOfWeek;\n    }\n\n    // Convert object keys to date array and sort in descending order\n    const sortedDates = Object.keys(datesObject).sort((a, b) => new Date(b) - new Date(a));\n    if (sortedDates.length === 0) {\n      return 0; // No entries, so no streak\n    }\n    let currentStreak = 0;\n    let lastWeekStart = null;\n    for (const dateStr of sortedDates) {\n      const date = new Date(dateStr);\n      const weekStart = getStartOfWeek(date);\n      if (!lastWeekStart || weekStart.getTime() < lastWeekStart.getTime()) {\n        currentStreak++;\n        lastWeekStart = weekStart;\n      }\n    }\n    return currentStreak;\n  }\n  if (props.workouts) {}\n  const val = findRecentConsecutiveEntries(props.workouts);\n  const val2 = findConsecutiveWeeklyEntries(props.workouts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"parent\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"welcome-text\",\n      children: \"Welcome Back!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day-streak-parent\",\n      children: [\"How Many Days In A Row You've Worked Out For:\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-streak-num\",\n        children: val\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"week-streak-parent\",\n      children: [\"How Many Weeks In A Row You've Worked Out For:\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"week-streak-num\",\n        children: val2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), !(val === 0 || val2 === 0) ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"keep-it-up\",\n      children: \"Keep it Up!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 43\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"keep-it-up\",\n      children: \"Get Started!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 89\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","props","console","log","findRecentConsecutiveEntries","datesObject","Object","keys","length","sortedDates","sort","a","b","Date","currentStreak","mostRecentDate","i","currentDate","expectedDate","setDate","getDate","getTime","findConsecutiveWeeklyEntries","getStartOfWeek","date","startOfWeek","setHours","dayOfWeek","getDay","diff","lastWeekStart","dateStr","weekStart","workouts","val","val2","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/kevin/Projects/fitness-tracker/client/src/components/pages/HomePage.js"],"sourcesContent":["import React from \"react\";\n\nexport default function (props) {\n    console.log(props);\n    function findRecentConsecutiveEntries(datesObject) {\n        // Convert object keys to date array and sort in descending order\n        if (Object.keys(datesObject).length === 0) {\n            return 0;\n        }\n\n        const sortedDates = Object.keys(datesObject).sort((a, b) => new Date(b) - new Date(a));\n    \n        let currentStreak = 1;\n        let mostRecentDate = new Date(sortedDates[0]);\n    \n        for (let i = 1; i < sortedDates.length; i++) {\n            const currentDate = new Date(sortedDates[i]);\n            const expectedDate = new Date(mostRecentDate);\n            expectedDate.setDate(expectedDate.getDate() - currentStreak);\n    \n            if (currentDate.getTime() === expectedDate.getTime()) {\n                currentStreak++;\n            } else {\n                break; // Streak is broken\n            }\n        }\n    \n        return currentStreak;\n    }\n\n    function findConsecutiveWeeklyEntries(datesObject) {\n        // Helper function to get the start of the week (Monday) for a given date\n        function getStartOfWeek(date) {\n            const startOfWeek = new Date(date);\n            startOfWeek.setHours(0, 0, 0, 0); // normalize time to start of the day\n            const dayOfWeek = startOfWeek.getDay();\n            const diff = startOfWeek.getDate() - dayOfWeek + (dayOfWeek === 0 ? -6 : 1); // adjust when day is Sunday\n            startOfWeek.setDate(diff);\n            return startOfWeek;\n        }\n    \n        // Convert object keys to date array and sort in descending order\n        const sortedDates = Object.keys(datesObject).sort((a, b) => new Date(b) - new Date(a));\n    \n        if (sortedDates.length === 0) {\n            return 0; // No entries, so no streak\n        }\n    \n        let currentStreak = 0;\n        let lastWeekStart = null;\n    \n        for (const dateStr of sortedDates) {\n            const date = new Date(dateStr);\n            const weekStart = getStartOfWeek(date);\n    \n            if (!lastWeekStart || weekStart.getTime() < lastWeekStart.getTime()) {\n                currentStreak++;\n                lastWeekStart = weekStart;\n            }\n        }\n    \n        return currentStreak;\n    }\n\n    if (props.workouts) {\n        \n    }\n    const val = findRecentConsecutiveEntries(props.workouts)\n    const val2 = findConsecutiveWeeklyEntries(props.workouts)\n\n    return (\n        <div className=\"parent\">\n            <h1 className=\"welcome-text\">\n                Welcome Back!\n            </h1>\n            <div className=\"day-streak-parent\">\n                How Many Days In A Row You've Worked Out For:  \n                <div className=\"day-streak-num\">\n                    {val}\n                </div>           \n            </div>\n            <div className=\"week-streak-parent\">\n                How Many Weeks In A Row You've Worked Out For:\n                <div className=\"week-streak-num\">\n                    {val2}\n                </div>\n            </div>\n            {!(val === 0 || val2 === 0) ? <h1 className=\"keep-it-up\">Keep it Up!</h1> : <h1 className=\"keep-it-up\">Get Started!</h1>}\n            \n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}